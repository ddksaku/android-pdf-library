import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.+'
    }
}

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.0"

    defaultConfig {

        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "Mupdf"
            ldLibs "log", "mupdf"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs' //set .so files location to libs
        jni.srcDirs = [] //disable automatic ndk-build call
    }


    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
//        def ndkDir = android.plugin.ndkFolder
        def ndkDir = plugins.getPlugin('com.android.library').sdkHandler.ndkFolder
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine "$ndkDir/ndk-build.cmd",
                    '-C', file('src/main/jni').absolutePath,
                    '-j', Runtime.runtime.availableProcessors(),
                    'all', 'NDK_DEBUG=1'
        } else {
            commandLine "$ndkDir/ndk-build",
                    '-C', file('src/main/jni').absolutePath,
                    '-j', Runtime.runtime.availableProcessors(),
                    'all', 'NDK_DEBUG=1'}
    }

//        task cleanNative(type: Exec, description: 'Clean JNI object files') {
//            //    def ndkDir = android.plugin.ndkFolder
//            def ndkDir = plugins.getPlugin('com.android.library').sdkHandler.ndkFolder
//            if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//                commandLine "$ndkDir/ndk-build.cmd",
//                        '-C', file('jni').absolutePath,
//                        'clean'
//            } else {
//                commandLine "$ndkDir/ndk-build",
//                        '-C', file('jni').absolutePath,
//                        'clean'
//            }
//        }

    //   clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }

}

//dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
//    //compile 'com.android.support:appcompat-v7:22.0.0'
//}
