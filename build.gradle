apply plugin: 'com.android.library'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.3'
    }
}

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "mupdf"
            cFlags "-DANDROID_NDK -DDISABLE_IMPORTGL"
            stl "stlport_static"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs' //set .so files location to libs
        jni.srcDirs = [] //disable automatic ndk-build call
    }

}

    task showClasspath << {
        buildscript.configurations.classpath.each { println it.name }
    }
    //Compile Jni
    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {

        def ndkDir = plugins.getPlugin('com.android.library').sdkHandler.ndkFolder
        if (System.properties['os.name'].toLowerCase().contains('windows')) {
            commandLine "$ndkDir/ndk-build.cmd",
                    '-C', file('src/main/jni').absolutePath,
                    '-j', Runtime.runtime.availableProcessors(),
                    'all', 'NDK_DEBUG=1'
        } else {
            commandLine "$ndkDir/ndk-build",
                    '-C', file('src/main/jni').absolutePath,
                    '-j', Runtime.runtime.availableProcessors(),
                    'all', 'NDK_DEBUG=1'
        }


        tasks.withType(JavaCompile) {
            compileTask -> compileTask.dependsOn buildNative
        }

    }
